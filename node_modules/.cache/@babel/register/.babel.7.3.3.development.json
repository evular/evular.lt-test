{
  "{\"sourceRoot\":\"/Users/administrator/Development/evular.lt-test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/administrator/Development/evular.lt-test\",\"filename\":\"/Users/administrator/Development/evular.lt-test/static.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/administrator/Development/evular.lt-test\",\"plugins\":[{\"key\":\"macros\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"/Users/administrator/Development/evular.lt-test/node_modules/react-hot-loader/babel.js\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"helpers\":false,\"regenerator\":true}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx-source\",\"visitor\":{\"JSXOpeningElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-jsx-self\",\"visitor\":{\"JSXOpeningElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-polyfill-require\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"debug\":false,\"polyfills\":{},\"regenerator\":true}}],\"presets\":[]}:7.3.3:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/administrator/Development/evular.lt-test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/administrator/Development/evular.lt-test",
      "filename": "/Users/administrator/Development/evular.lt-test/static.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/administrator/Development/evular.lt-test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "macros",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "/Users/administrator/Development/evular.lt-test/node_modules/react-hot-loader/babel.js",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "helpers": false,
            "regenerator": true
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx-source",
          "visitor": {
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx-self",
          "visitor": {
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-polyfill-require",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "debug": false,
            "polyfills": {},
            "regenerator": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/administrator/Development/evular.lt-test/static.config.js",
        "plugins": [
          "dynamicImport",
          "classProperties",
          "classPrivateProperties",
          "optionalChaining",
          "exportDefaultFrom",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/administrator/Development/evular.lt-test/static.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/administrator/Development/evular.lt-test",
        "sourceFileName": "static.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _klaw = _interopRequireDefault(require(\"klaw\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _grayMatter = _interopRequireDefault(require(\"gray-matter\"));\n\nvar _marked = _interopRequireDefault(require(\"marked\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar siteRoot = \"https://www.evular.lt\";\n\nvar getContent = function getContent(directory) {\n  var items = []; // Walk (\"klaw\") through posts directory and push file paths into items array //\n\n  var getFiles = function getFiles() {\n    return new Promise(function (resolve) {\n      // Check if posts directory exists //\n      if (_fs.default.existsSync(directory)) {\n        (0, _klaw.default)(directory).on(\"data\", function (item) {\n          // Filter function to retrieve .md files //\n          if (_path.default.extname(item.path) === \".md\") {\n            // If markdown file, read contents //\n            var data = _fs.default.readFileSync(item.path, \"utf8\"); // Convert to frontmatter object and markdown content //\n\n\n            var dataObj = (0, _grayMatter.default)(data); // Create slug for URL //\n\n            dataObj.data.slug = dataObj.data.title.toLowerCase().replace(/ /g, \"-\").replace(/[^\\w-]+/g, \"\");\n            dataObj.content = (0, _marked.default)(dataObj.content); // Remove unused key //\n\n            delete dataObj.orig; // Push object into items array //\n\n            items.push(dataObj);\n          }\n        }).on(\"error\", function (e) {\n          console.log(e);\n        }).on(\"end\", function () {\n          // Resolve promise for async getRoutes request //\n          // posts = items for below routes //\n          resolve(items);\n        });\n      } else {\n        // If src/posts directory doesn't exist, return items as empty array //\n        resolve(items);\n      }\n    });\n  };\n\n  return getFiles();\n};\n\nvar _default = {\n  getSiteData: function () {\n    var _getSiteData = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee() {\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", {\n                title: \"Evular\"\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getSiteData() {\n      return _getSiteData.apply(this, arguments);\n    }\n\n    return getSiteData;\n  }(),\n  getRoutes: function () {\n    var _getRoutes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee2() {\n      var posts;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getContent(\"data/posts\");\n\n            case 2:\n              posts = _context2.sent;\n              return _context2.abrupt(\"return\", [{\n                path: \"/\",\n                component: \"src/pages/Home.jsx\",\n                getData: function getData() {\n                  return {\n                    posts: posts\n                  };\n                }\n              }, {\n                path: \"/blogas/\",\n                component: \"src/pages/Blog.jsx\",\n                getData: function getData() {\n                  return {\n                    posts: posts\n                  };\n                },\n                children: posts.map(function (post) {\n                  return {\n                    path: \"/\".concat(post.data.slug),\n                    component: \"src/pages/Post.jsx\",\n                    getData: function getData() {\n                      return {\n                        post: post,\n                        posts: posts\n                      };\n                    }\n                  };\n                })\n              }, {\n                path: \"404\",\n                component: \"src/pages/NotFound.jsx\"\n              }, {\n                path: \"/success/\",\n                component: \"src/pages/Success.jsx\"\n              }]);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getRoutes() {\n      return _getRoutes.apply(this, arguments);\n    }\n\n    return getRoutes;\n  }(),\n  siteRoot: siteRoot\n};\nvar _default2 = _default;\nexports.default = _default2;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(siteRoot, \"siteRoot\", \"/Users/administrator/Development/evular.lt-test/static.config.js\");\n  reactHotLoader.register(getContent, \"getContent\", \"/Users/administrator/Development/evular.lt-test/static.config.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/administrator/Development/evular.lt-test/static.config.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpYy5jb25maWcuanMiXSwibmFtZXMiOlsic2l0ZVJvb3QiLCJnZXRDb250ZW50IiwiZGlyZWN0b3J5IiwiaXRlbXMiLCJnZXRGaWxlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwiZnMiLCJleGlzdHNTeW5jIiwib24iLCJpdGVtIiwicGF0aCIsImV4dG5hbWUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwiZGF0YU9iaiIsInNsdWciLCJ0aXRsZSIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsImNvbnRlbnQiLCJvcmlnIiwicHVzaCIsImUiLCJjb25zb2xlIiwibG9nIiwiZ2V0U2l0ZURhdGEiLCJnZXRSb3V0ZXMiLCJwb3N0cyIsImNvbXBvbmVudCIsImdldERhdGEiLCJjaGlsZHJlbiIsIm1hcCIsInBvc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLHVCQUFqQjs7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFBQyxTQUFTLEVBQUk7QUFDOUIsTUFBTUMsS0FBSyxHQUFHLEVBQWQsQ0FEOEIsQ0FFOUI7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVc7QUFBQSxXQUNmLElBQUlDLE9BQUosQ0FBWSxVQUFBQyxPQUFPLEVBQUk7QUFDckI7QUFDQSxVQUFJQyxZQUFHQyxVQUFILENBQWNOLFNBQWQsQ0FBSixFQUE4QjtBQUM1QiwyQkFBS0EsU0FBTCxFQUNHTyxFQURILENBQ00sTUFETixFQUNjLFVBQUFDLElBQUksRUFBSTtBQUNsQjtBQUNBLGNBQUlDLGNBQUtDLE9BQUwsQ0FBYUYsSUFBSSxDQUFDQyxJQUFsQixNQUE0QixLQUFoQyxFQUF1QztBQUNyQztBQUNBLGdCQUFNRSxJQUFJLEdBQUdOLFlBQUdPLFlBQUgsQ0FBZ0JKLElBQUksQ0FBQ0MsSUFBckIsRUFBMkIsTUFBM0IsQ0FBYixDQUZxQyxDQUdyQzs7O0FB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O0FBQUE7O0FBQUE7QUFBQSxLQUpJO0FBdUNiN0IsRUFBQUEsUUFBUSxFQUFSQTtBQXZDYSxDOzs7Ozs7Ozs7Ozs7MEJBN0NUQSxROzBCQUVBQyxVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9hZG1pbmlzdHJhdG9yL0RldmVsb3BtZW50L2V2dWxhci5sdC10ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gXCJmc1wiO1xuaW1wb3J0IGtsYXcgZnJvbSBcImtsYXdcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgbWF0dGVyIGZyb20gXCJncmF5LW1hdHRlclwiO1xuaW1wb3J0IG1hcmtlZCBmcm9tIFwibWFya2VkXCI7XG5cbmNvbnN0IHNpdGVSb290ID0gXCJodHRwczovL3d3dy5ldnVsYXIubHRcIjtcblxuY29uc3QgZ2V0Q29udGVudCA9IGRpcmVjdG9yeSA9PiB7XG4gIGNvbnN0IGl0ZW1zID0gW107XG4gIC8vIFdhbGsgKFwia2xhd1wiKSB0aHJvdWdoIHBvc3RzIGRpcmVjdG9yeSBhbmQgcHVzaCBmaWxlIHBhdGhzIGludG8gaXRlbXMgYXJyYXkgLy9cbiAgY29uc3QgZ2V0RmlsZXMgPSAoKSA9PlxuICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgLy8gQ2hlY2sgaWYgcG9zdHMgZGlyZWN0b3J5IGV4aXN0cyAvL1xuICAgICAgaWYgKGZzLmV4aXN0c1N5bmMoZGlyZWN0b3J5KSkge1xuICAgICAgICBrbGF3KGRpcmVjdG9yeSlcbiAgICAgICAgICAub24oXCJkYXRhXCIsIGl0ZW0gPT4ge1xuICAgICAgICAgICAgLy8gRmlsdGVyIGZ1bmN0aW9uIHRvIHJldHJpZXZlIC5tZCBmaWxlcyAvL1xuICAgICAgICAgICAgaWYgKHBhdGguZXh0bmFtZShpdGVtLnBhdGgpID09PSBcIi5tZFwiKSB7XG4gICAgICAgICAgICAgIC8vIElmIG1hcmtkb3duIGZpbGUsIHJlYWQgY29udGVudHMgLy9cbiAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhpdGVtLnBhdGgsIFwidXRmOFwiKTtcbiAgICAgICAgICAgICAgLy8gQ29udmVydCB0byBmcm9udG1hdHRlciBvYmplY3QgYW5kIG1hcmtkb3duIGNvbnRlbnQgLy9cbiAgICAgICAgICAgICAgY29uc3QgZGF0YU9iaiA9IG1hdHRlcihkYXRhKTtcbiAgICAgICAgICAgICAgLy8gQ3JlYXRlIHNsdWcgZm9yIFVSTCAvL1xuICAgICAgICAgICAgICBkYXRhT2JqLmRhdGEuc2x1ZyA9IGRhdGFPYmouZGF0YS50aXRsZVxuICAgICAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1teXFx3LV0rL2csIFwiXCIpO1xuICAgICAgICAgICAgICBkYXRhT2JqLmNvbnRlbnQgPSBtYXJrZWQoZGF0YU9iai5jb250ZW50KTtcbiAgICAgICAgICAgICAgLy8gUmVtb3ZlIHVudXNlZCBrZXkgLy9cbiAgICAgICAgICAgICAgZGVsZXRlIGRhdGFPYmoub3JpZztcbiAgICAgICAgICAgICAgLy8gUHVzaCBvYmplY3QgaW50byBpdGVtcyBhcnJheSAvL1xuICAgICAgICAgICAgICBpdGVtcy5wdXNoKGRhdGFPYmopO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLm9uKFwiZXJyb3JcIiwgZSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5vbihcImVuZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyBSZXNvbHZlIHByb21pc2UgZm9yIGFzeW5jIGdldFJvdXRlcyByZXF1ZXN0IC8vXG4gICAgICAgICAgICAvLyBwb3N0cyA9IGl0ZW1zIGZvciBiZWxvdyByb3V0ZXMgLy9cbiAgICAgICAgICAgIHJlc29sdmUoaXRlbXMpO1xuICAgICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSWYgc3JjL3Bvc3RzIGRpcmVjdG9yeSBkb2Vzbid0IGV4aXN0LCByZXR1cm4gaXRlbXMgYXMgZW1wdHkgYXJyYXkgLy9cbiAgICAgICAgcmVzb2x2ZShpdGVtcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIHJldHVybiBnZXRGaWxlcygpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXRTaXRlRGF0YTogYXN5bmMgKCkgPT4gKHtcbiAgICB0aXRsZTogXCJFdnVsYXJcIlxuICB9KSxcbiAgZ2V0Um91dGVzOiBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcG9zdHMgPSBhd2FpdCBnZXRDb250ZW50KFwiZGF0YS9wb3N0c1wiKTtcbiAgICByZXR1cm4gW1xuICAgICAge1xuICAgICAgICBwYXRoOiBcIi9cIixcbiAgICAgICAgY29tcG9uZW50OiBcInNyYy9wYWdlcy9Ib21lLmpzeFwiLFxuICAgICAgICBnZXREYXRhOiAoKSA9PiAoe1xuICAgICAgICAgIHBvc3RzXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXRoOiBcIi9ibG9nYXMvXCIsXG4gICAgICAgIGNvbXBvbmVudDogXCJzcmMvcGFnZXMvQmxvZy5qc3hcIixcbiAgICAgICAgZ2V0RGF0YTogKCkgPT4gKHtcbiAgICAgICAgICBwb3N0c1xuICAgICAgICB9KSxcbiAgICAgICAgY2hpbGRyZW46IHBvc3RzLm1hcChwb3N0ID0+ICh7XG4gICAgICAgICAgcGF0aDogYC8ke3Bvc3QuZGF0YS5zbHVnfWAsXG4gICAgICAgICAgY29tcG9uZW50OiBcInNyYy9wYWdlcy9Qb3N0LmpzeFwiLFxuICAgICAgICAgIGdldERhdGE6ICgpID0+ICh7XG4gICAgICAgICAgICBwb3N0LFxuICAgICAgICAgICAgcG9zdHNcbiAgICAgICAgICB9KVxuICAgICAgICB9KSlcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdGg6IFwiNDA0XCIsXG4gICAgICAgIGNvbXBvbmVudDogXCJzcmMvcGFnZXMvTm90Rm91bmQuanN4XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdGg6IFwiL3N1Y2Nlc3MvXCIsXG4gICAgICAgIGNvbXBvbmVudDogXCJzcmMvcGFnZXMvU3VjY2Vzcy5qc3hcIlxuICAgICAgfVxuICAgIF07XG4gIH0sXG4gIHNpdGVSb290XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "static.config.js"
      ],
      "names": [
        "siteRoot",
        "getContent",
        "directory",
        "items",
        "getFiles",
        "Promise",
        "resolve",
        "fs",
        "existsSync",
        "on",
        "item",
        "path",
        "extname",
        "data",
        "readFileSync",
        "dataObj",
        "slug",
        "title",
        "toLowerCase",
        "replace",
        "content",
        "orig",
        "push",
        "e",
        "console",
        "log",
        "getSiteData",
        "getRoutes",
        "posts",
        "component",
        "getData",
        "children",
        "map",
        "post"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/administrator/Development/evular.lt-test",
      "sourcesContent": [
        "import fs from \"fs\";\nimport klaw from \"klaw\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport marked from \"marked\";\n\nconst siteRoot = \"https://www.evular.lt\";\n\nconst getContent = directory => {\n  const items = [];\n  // Walk (\"klaw\") through posts directory and push file paths into items array //\n  const getFiles = () =>\n    new Promise(resolve => {\n      // Check if posts directory exists //\n      if (fs.existsSync(directory)) {\n        klaw(directory)\n          .on(\"data\", item => {\n            // Filter function to retrieve .md files //\n            if (path.extname(item.path) === \".md\") {\n              // If markdown file, read contents //\n              const data = fs.readFileSync(item.path, \"utf8\");\n              // Convert to frontmatter object and markdown content //\n              const dataObj = matter(data);\n              // Create slug for URL //\n              dataObj.data.slug = dataObj.data.title\n                .toLowerCase()\n                .replace(/ /g, \"-\")\n                .replace(/[^\\w-]+/g, \"\");\n              dataObj.content = marked(dataObj.content);\n              // Remove unused key //\n              delete dataObj.orig;\n              // Push object into items array //\n              items.push(dataObj);\n            }\n          })\n          .on(\"error\", e => {\n            console.log(e);\n          })\n          .on(\"end\", () => {\n            // Resolve promise for async getRoutes request //\n            // posts = items for below routes //\n            resolve(items);\n          });\n      } else {\n        // If src/posts directory doesn't exist, return items as empty array //\n        resolve(items);\n      }\n    });\n  return getFiles();\n};\n\nexport default {\n  getSiteData: async () => ({\n    title: \"Evular\"\n  }),\n  getRoutes: async () => {\n    const posts = await getContent(\"data/posts\");\n    return [\n      {\n        path: \"/\",\n        component: \"src/pages/Home.jsx\",\n        getData: () => ({\n          posts\n        })\n      },\n      {\n        path: \"/blogas/\",\n        component: \"src/pages/Blog.jsx\",\n        getData: () => ({\n          posts\n        }),\n        children: posts.map(post => ({\n          path: `/${post.data.slug}`,\n          component: \"src/pages/Post.jsx\",\n          getData: () => ({\n            post,\n            posts\n          })\n        }))\n      },\n      {\n        path: \"404\",\n        component: \"src/pages/NotFound.jsx\"\n      },\n      {\n        path: \"/success/\",\n        component: \"src/pages/Success.jsx\"\n      }\n    ];\n  },\n  siteRoot\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551000053934
  },
  "{\"sourceRoot\":\"/Users/administrator/Development/evular.lt-test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/administrator/Development/evular.lt-test\",\"filename\":\"/Users/administrator/Development/evular.lt-test/static.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/administrator/Development/evular.lt-test\",\"plugins\":[{\"key\":\"macros\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"universal-import\",\"visitor\":{\"Import\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"helpers\":false,\"regenerator\":true}},{\"key\":\"/Users/administrator/Development/evular.lt-test/node_modules/babel-plugin-transform-react-remove-prop-types/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-default-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":true}},{\"key\":\"transform-polyfill-require\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"debug\":false,\"polyfills\":{},\"regenerator\":true}}],\"presets\":[]}:7.3.3:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/administrator/Development/evular.lt-test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/administrator/Development/evular.lt-test",
      "filename": "/Users/administrator/Development/evular.lt-test/static.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/administrator/Development/evular.lt-test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "macros",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "universal-import",
          "visitor": {
            "Import": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "helpers": false,
            "regenerator": true
          }
        },
        {
          "key": "/Users/administrator/Development/evular.lt-test/node_modules/babel-plugin-transform-react-remove-prop-types/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-default-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-polyfill-require",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "debug": false,
            "polyfills": {},
            "regenerator": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/administrator/Development/evular.lt-test/static.config.js",
        "plugins": [
          "dynamicImport",
          "classProperties",
          "classPrivateProperties",
          "optionalChaining",
          "exportDefaultFrom",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/administrator/Development/evular.lt-test/static.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/administrator/Development/evular.lt-test",
        "sourceFileName": "static.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _klaw = _interopRequireDefault(require(\"klaw\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _grayMatter = _interopRequireDefault(require(\"gray-matter\"));\n\nvar _marked = _interopRequireDefault(require(\"marked\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar siteRoot = \"https://www.evular.lt\";\n\nvar getContent = function getContent(directory) {\n  var items = []; // Walk (\"klaw\") through posts directory and push file paths into items array //\n\n  var getFiles = function getFiles() {\n    return new Promise(function (resolve) {\n      // Check if posts directory exists //\n      if (_fs.default.existsSync(directory)) {\n        (0, _klaw.default)(directory).on(\"data\", function (item) {\n          // Filter function to retrieve .md files //\n          if (_path.default.extname(item.path) === \".md\") {\n            // If markdown file, read contents //\n            var data = _fs.default.readFileSync(item.path, \"utf8\"); // Convert to frontmatter object and markdown content //\n\n\n            var dataObj = (0, _grayMatter.default)(data); // Create slug for URL //\n\n            dataObj.data.slug = dataObj.data.title.toLowerCase().replace(/ /g, \"-\").replace(/[^\\w-]+/g, \"\");\n            dataObj.content = (0, _marked.default)(dataObj.content); // Remove unused key //\n\n            delete dataObj.orig; // Push object into items array //\n\n            items.push(dataObj);\n          }\n        }).on(\"error\", function (e) {\n          console.log(e);\n        }).on(\"end\", function () {\n          // Resolve promise for async getRoutes request //\n          // posts = items for below routes //\n          resolve(items);\n        });\n      } else {\n        // If src/posts directory doesn't exist, return items as empty array //\n        resolve(items);\n      }\n    });\n  };\n\n  return getFiles();\n};\n\nvar _default = {\n  getSiteData: function () {\n    var _getSiteData = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee() {\n      return _regenerator.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", {\n                title: \"Evular\"\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getSiteData() {\n      return _getSiteData.apply(this, arguments);\n    }\n\n    return getSiteData;\n  }(),\n  getRoutes: function () {\n    var _getRoutes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee2() {\n      var posts;\n      return _regenerator.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getContent(\"data/posts\");\n\n            case 2:\n              posts = _context2.sent;\n              return _context2.abrupt(\"return\", [{\n                path: \"/\",\n                component: \"src/pages/Home.jsx\",\n                getData: function getData() {\n                  return {\n                    posts: posts\n                  };\n                }\n              }, {\n                path: \"/blogas/\",\n                component: \"src/pages/Blog.jsx\",\n                getData: function getData() {\n                  return {\n                    posts: posts\n                  };\n                },\n                children: posts.map(function (post) {\n                  return {\n                    path: \"/\".concat(post.data.slug),\n                    component: \"src/pages/Post.jsx\",\n                    getData: function getData() {\n                      return {\n                        post: post,\n                        posts: posts\n                      };\n                    }\n                  };\n                })\n              }, {\n                path: \"404\",\n                component: \"src/pages/NotFound.jsx\"\n              }, {\n                path: \"/success/\",\n                component: \"src/pages/Success.jsx\"\n              }]);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getRoutes() {\n      return _getRoutes.apply(this, arguments);\n    }\n\n    return getRoutes;\n  }(),\n  siteRoot: siteRoot\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpYy5jb25maWcuanMiXSwibmFtZXMiOlsic2l0ZVJvb3QiLCJnZXRDb250ZW50IiwiZGlyZWN0b3J5IiwiaXRlbXMiLCJnZXRGaWxlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwiZnMiLCJleGlzdHNTeW5jIiwib24iLCJpdGVtIiwicGF0aCIsImV4dG5hbWUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwiZGF0YU9iaiIsInNsdWciLCJ0aXRsZSIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsImNvbnRlbnQiLCJvcmlnIiwicHVzaCIsImUiLCJjb25zb2xlIiwibG9nIiwiZ2V0U2l0ZURhdGEiLCJnZXRSb3V0ZXMiLCJwb3N0cyIsImNvbXBvbmVudCIsImdldERhdGEiLCJjaGlsZHJlbiIsIm1hcCIsInBvc3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyx1QkFBakI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQUMsU0FBUyxFQUFJO0FBQzlCLE1BQU1DLEtBQUssR0FBRyxFQUFkLENBRDhCLENBRTlCOztBQUNBLE1BQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXO0FBQUEsV0FDZixJQUFJQyxPQUFKLENBQVksVUFBQUMsT0FBTyxFQUFJO0FBQ3JCO0FBQ0EsVUFBSUMsWUFBR0MsVUFBSCxDQUFjTixTQUFkLENBQUosRUFBOEI7QUFDNUIsMkJBQUtBLFNBQUwsRUFDR08sRUFESCxDQUNNLE1BRE4sRUFDYyxVQUFBQyxJQUFJLEVBQUk7QUFDbEI7QUFDQSxjQUFJQyxjQUFLQyxPQUFMLENBQWFGLElBQUksQ0FBQ0MsSUFBbEIsTUFBNEIsS0FBaEMsRUFBdUM7QUFDckM7QUFDQSxnQkFBTUUsSUFBSSxHQUFHTixZQUFHTyxZQUFILENBQWdCSixJQUFJLENBQUNDLElBQXJCLEVBQTJCLE1BQTNCLENBQWIsQ0FGcUMsQ0FHckM7OztBQUNBLGdC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OztBQUFBO0FBQUEsS0FKSTtBQXVDYjdCLEVBQUFBLFFBQVEsRUFBUkE7QUF2Q2EsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWRtaW5pc3RyYXRvci9EZXZlbG9wbWVudC9ldnVsYXIubHQtdGVzdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCBrbGF3IGZyb20gXCJrbGF3XCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IG1hdHRlciBmcm9tIFwiZ3JheS1tYXR0ZXJcIjtcbmltcG9ydCBtYXJrZWQgZnJvbSBcIm1hcmtlZFwiO1xuXG5jb25zdCBzaXRlUm9vdCA9IFwiaHR0cHM6Ly93d3cuZXZ1bGFyLmx0XCI7XG5cbmNvbnN0IGdldENvbnRlbnQgPSBkaXJlY3RvcnkgPT4ge1xuICBjb25zdCBpdGVtcyA9IFtdO1xuICAvLyBXYWxrIChcImtsYXdcIikgdGhyb3VnaCBwb3N0cyBkaXJlY3RvcnkgYW5kIHB1c2ggZmlsZSBwYXRocyBpbnRvIGl0ZW1zIGFycmF5IC8vXG4gIGNvbnN0IGdldEZpbGVzID0gKCkgPT5cbiAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIC8vIENoZWNrIGlmIHBvc3RzIGRpcmVjdG9yeSBleGlzdHMgLy9cbiAgICAgIGlmIChmcy5leGlzdHNTeW5jKGRpcmVjdG9yeSkpIHtcbiAgICAgICAga2xhdyhkaXJlY3RvcnkpXG4gICAgICAgICAgLm9uKFwiZGF0YVwiLCBpdGVtID0+IHtcbiAgICAgICAgICAgIC8vIEZpbHRlciBmdW5jdGlvbiB0byByZXRyaWV2ZSAubWQgZmlsZXMgLy9cbiAgICAgICAgICAgIGlmIChwYXRoLmV4dG5hbWUoaXRlbS5wYXRoKSA9PT0gXCIubWRcIikge1xuICAgICAgICAgICAgICAvLyBJZiBtYXJrZG93biBmaWxlLCByZWFkIGNvbnRlbnRzIC8vXG4gICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMoaXRlbS5wYXRoLCBcInV0ZjhcIik7XG4gICAgICAgICAgICAgIC8vIENvbnZlcnQgdG8gZnJvbnRtYXR0ZXIgb2JqZWN0IGFuZCBtYXJrZG93biBjb250ZW50IC8vXG4gICAgICAgICAgICAgIGNvbnN0IGRhdGFPYmogPSBtYXR0ZXIoZGF0YSk7XG4gICAgICAgICAgICAgIC8vIENyZWF0ZSBzbHVnIGZvciBVUkwgLy9cbiAgICAgICAgICAgICAgZGF0YU9iai5kYXRhLnNsdWcgPSBkYXRhT2JqLmRhdGEudGl0bGVcbiAgICAgICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8gL2csIFwiLVwiKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9bXlxcdy1dKy9nLCBcIlwiKTtcbiAgICAgICAgICAgICAgZGF0YU9iai5jb250ZW50ID0gbWFya2VkKGRhdGFPYmouY29udGVudCk7XG4gICAgICAgICAgICAgIC8vIFJlbW92ZSB1bnVzZWQga2V5IC8vXG4gICAgICAgICAgICAgIGRlbGV0ZSBkYXRhT2JqLm9yaWc7XG4gICAgICAgICAgICAgIC8vIFB1c2ggb2JqZWN0IGludG8gaXRlbXMgYXJyYXkgLy9cbiAgICAgICAgICAgICAgaXRlbXMucHVzaChkYXRhT2JqKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5vbihcImVycm9yXCIsIGUgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gUmVzb2x2ZSBwcm9taXNlIGZvciBhc3luYyBnZXRSb3V0ZXMgcmVxdWVzdCAvL1xuICAgICAgICAgICAgLy8gcG9zdHMgPSBpdGVtcyBmb3IgYmVsb3cgcm91dGVzIC8vXG4gICAgICAgICAgICByZXNvbHZlKGl0ZW1zKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIHNyYy9wb3N0cyBkaXJlY3RvcnkgZG9lc24ndCBleGlzdCwgcmV0dXJuIGl0ZW1zIGFzIGVtcHR5IGFycmF5IC8vXG4gICAgICAgIHJlc29sdmUoaXRlbXMpO1xuICAgICAgfVxuICAgIH0pO1xuICByZXR1cm4gZ2V0RmlsZXMoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0U2l0ZURhdGE6IGFzeW5jICgpID0+ICh7XG4gICAgdGl0bGU6IFwiRXZ1bGFyXCJcbiAgfSksXG4gIGdldFJvdXRlczogYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgZ2V0Q29udGVudChcImRhdGEvcG9zdHNcIik7XG4gICAgcmV0dXJuIFtcbiAgICAgIHtcbiAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgIGNvbXBvbmVudDogXCJzcmMvcGFnZXMvSG9tZS5qc3hcIixcbiAgICAgICAgZ2V0RGF0YTogKCkgPT4gKHtcbiAgICAgICAgICBwb3N0c1xuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0aDogXCIvYmxvZ2FzL1wiLFxuICAgICAgICBjb21wb25lbnQ6IFwic3JjL3BhZ2VzL0Jsb2cuanN4XCIsXG4gICAgICAgIGdldERhdGE6ICgpID0+ICh7XG4gICAgICAgICAgcG9zdHNcbiAgICAgICAgfSksXG4gICAgICAgIGNoaWxkcmVuOiBwb3N0cy5tYXAocG9zdCA9PiAoe1xuICAgICAgICAgIHBhdGg6IGAvJHtwb3N0LmRhdGEuc2x1Z31gLFxuICAgICAgICAgIGNvbXBvbmVudDogXCJzcmMvcGFnZXMvUG9zdC5qc3hcIixcbiAgICAgICAgICBnZXREYXRhOiAoKSA9PiAoe1xuICAgICAgICAgICAgcG9zdCxcbiAgICAgICAgICAgIHBvc3RzXG4gICAgICAgICAgfSlcbiAgICAgICAgfSkpXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXRoOiBcIjQwNFwiLFxuICAgICAgICBjb21wb25lbnQ6IFwic3JjL3BhZ2VzL05vdEZvdW5kLmpzeFwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXRoOiBcIi9zdWNjZXNzL1wiLFxuICAgICAgICBjb21wb25lbnQ6IFwic3JjL3BhZ2VzL1N1Y2Nlc3MuanN4XCJcbiAgICAgIH1cbiAgICBdO1xuICB9LFxuICBzaXRlUm9vdFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "static.config.js"
      ],
      "names": [
        "siteRoot",
        "getContent",
        "directory",
        "items",
        "getFiles",
        "Promise",
        "resolve",
        "fs",
        "existsSync",
        "on",
        "item",
        "path",
        "extname",
        "data",
        "readFileSync",
        "dataObj",
        "slug",
        "title",
        "toLowerCase",
        "replace",
        "content",
        "orig",
        "push",
        "e",
        "console",
        "log",
        "getSiteData",
        "getRoutes",
        "posts",
        "component",
        "getData",
        "children",
        "map",
        "post"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/administrator/Development/evular.lt-test",
      "sourcesContent": [
        "import fs from \"fs\";\nimport klaw from \"klaw\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport marked from \"marked\";\n\nconst siteRoot = \"https://www.evular.lt\";\n\nconst getContent = directory => {\n  const items = [];\n  // Walk (\"klaw\") through posts directory and push file paths into items array //\n  const getFiles = () =>\n    new Promise(resolve => {\n      // Check if posts directory exists //\n      if (fs.existsSync(directory)) {\n        klaw(directory)\n          .on(\"data\", item => {\n            // Filter function to retrieve .md files //\n            if (path.extname(item.path) === \".md\") {\n              // If markdown file, read contents //\n              const data = fs.readFileSync(item.path, \"utf8\");\n              // Convert to frontmatter object and markdown content //\n              const dataObj = matter(data);\n              // Create slug for URL //\n              dataObj.data.slug = dataObj.data.title\n                .toLowerCase()\n                .replace(/ /g, \"-\")\n                .replace(/[^\\w-]+/g, \"\");\n              dataObj.content = marked(dataObj.content);\n              // Remove unused key //\n              delete dataObj.orig;\n              // Push object into items array //\n              items.push(dataObj);\n            }\n          })\n          .on(\"error\", e => {\n            console.log(e);\n          })\n          .on(\"end\", () => {\n            // Resolve promise for async getRoutes request //\n            // posts = items for below routes //\n            resolve(items);\n          });\n      } else {\n        // If src/posts directory doesn't exist, return items as empty array //\n        resolve(items);\n      }\n    });\n  return getFiles();\n};\n\nexport default {\n  getSiteData: async () => ({\n    title: \"Evular\"\n  }),\n  getRoutes: async () => {\n    const posts = await getContent(\"data/posts\");\n    return [\n      {\n        path: \"/\",\n        component: \"src/pages/Home.jsx\",\n        getData: () => ({\n          posts\n        })\n      },\n      {\n        path: \"/blogas/\",\n        component: \"src/pages/Blog.jsx\",\n        getData: () => ({\n          posts\n        }),\n        children: posts.map(post => ({\n          path: `/${post.data.slug}`,\n          component: \"src/pages/Post.jsx\",\n          getData: () => ({\n            post,\n            posts\n          })\n        }))\n      },\n      {\n        path: \"404\",\n        component: \"src/pages/NotFound.jsx\"\n      },\n      {\n        path: \"/success/\",\n        component: \"src/pages/Success.jsx\"\n      }\n    ];\n  },\n  siteRoot\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551000053934
  }
}